{"version":3,"sources":["like.png","fail.jpg","facePalm.png","Likes.js","Fails.js","FacePalms.js","Scard.js","View.js","Add.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Likes","event","this","props","likeaction","postId","Table","Image","onClick","clickHandler","fluid","className","src","LikeIcon","width","alt","no","React","Component","Fails","console","log","failsaction","FailsIcon","FacePalms","facePalmsaction","FacePalmsIcon","Scard","URL","match","Card","bg","Header","as","Row","Col","userPhoto","height","roundedCircle","id","Body","Text","text","likes","fails","facePalms","radioVal","img","createVideoURL","videoURL","frameBorder","allow","allowFullScreen","title","View","posts","map","current","i","a","key","userName","buildPosts","href","radios","name","value","checked","Add","state","currentUser","toastr","options","closeButton","debug","extendedTimeOut","hideDuration","hideEasing","hideMethod","newestOnTop","onclick","positionClass","preventDuplicates","progressBar","showDuration","showEasing","showMethod","timeOut","clear","submitHandler","bind","preventDefault","newState","target","setState","onsubmit","length","success","filterUser","users","user","radioValPass","Form","autocomplete","onSubmit","e","Group","controlId","Label","Dropdown","Toggle","variant","Menu","findUser","innerHTML","Item","userId","Control","type","placeholder","onChange","handleChange","ButtonGroup","radio","idx","ToggleButton","setRadioValue","currentTarget","Button","Profile","lastid","newId","App","undefined","userItem","concat","localStorage","setItem","JSON","stringify","postItem","post","Navbar","expand","Brand","aria-controls","Collapse","Nav","to","Container","path","postid","updateListItems","updateUserItems","exact","addLike","addFails","addFacePalms","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3176777.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.e0756cdb.png\";","module.exports = __webpack_public_path__ + \"static/media/fail.8ff3ad95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facePalm.27bc5802.png\";","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport LikeIcon from \"./like.png\";\r\n\r\nclass Likes extends React.Component {\r\n  clickHandler(event) {\r\n    this.props.likeaction(this.props.postId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Image\r\n                  onClick={() => this.clickHandler()}\r\n                  fluid\r\n                  className=\"mx-auto\"\r\n                  src={LikeIcon}\r\n                  width=\"50px\"\r\n                  alt=\"like logo\"\r\n                />\r\n              </td>\r\n              <td>{this.props.no}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport FailsIcon from \"./fail.jpg\";\r\n\r\nclass Fails extends React.Component {\r\n  clickHandler(event) {\r\n    console.log(this.props.postId);\r\n    this.props.failsaction(this.props.postId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Image\r\n                  onClick={() => this.clickHandler()}\r\n                  fluid\r\n                  className=\"mx-auto\"\r\n                  src={FailsIcon}\r\n                  width=\"50px\"\r\n                  alt=\"Fails logo\"\r\n                />\r\n              </td>\r\n              <td>{this.props.no}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fails;\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport FacePalmsIcon from \"./facePalm.png\";\r\n\r\nclass FacePalms extends React.Component {\r\n  clickHandler(event) {\r\n    console.log(this.props.postId);\r\n    this.props.facePalmsaction(this.props.postId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Image\r\n                  onClick={() => this.clickHandler()}\r\n                  fluid\r\n                  className=\"mx-auto\"\r\n                  src={FacePalmsIcon}\r\n                  width=\"50px\"\r\n                  alt=\"FacePalms logo\"\r\n                />\r\n              </td>\r\n              <td>{this.props.no}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FacePalms;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Likes from \"./Likes\";\r\nimport Fails from \"./Fails\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FacePalms from \"./FacePalms\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./App.css\";\r\n\r\nclass Scard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  createVideoURL(URL) {\r\n    return \"https://www.youtube.com/embed/\" + URL.match(/(\\w+(-)?\\w+)$/g);\r\n  }\r\n  /* <img src=\"Quiztime.PNG\" class=\"img-responsive img-circle margin\" style=\"display:inline\" alt=\"Quiz time Graphic \" width=\"250\" height=\"250\"></img> */\r\n  render() {\r\n    return (\r\n      <Card bg=\"light\" className=\"mx-auto text-center mt-2\">\r\n        <Card.Header as=\"h5\">\r\n          <Row>\r\n            <Col>\r\n              <Image\r\n                fluid\r\n                className=\"mx-auto\"\r\n                src={this.props.userPhoto}\r\n                alt={this.props.alt}\r\n                width=\"60\"\r\n                height=\"60\"\r\n                roundedCircle=\"true\"\r\n              />\r\n            </Col>\r\n            <Col>{this.props.id}</Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <div className=\"Container\">\r\n          <Row>\r\n            <Col id=\"test\">\r\n              <Card.Body>\r\n                <Card.Text>{this.props.text}</Card.Text>\r\n                {/* <Row>\r\n                  <Col width=\"100\"> */}\r\n                <Likes\r\n                  no={this.props.likes}\r\n                  likeaction={() => this.props.likeaction(this.props.postId)}\r\n                  postId={this.props.postId}\r\n                />\r\n                {/* </Col>\r\n                  <Col width=\"100\"> */}\r\n                <Fails\r\n                  no={this.props.fails}\r\n                  failsaction={() => this.props.failsaction(this.props.postId)}\r\n                  postId={this.props.postId}\r\n                />\r\n                {/* </Col>\r\n                  <Col width=\"100\"> */}\r\n                <FacePalms\r\n                  no={this.props.facePalms}\r\n                  facePalmsaction={() =>\r\n                    this.props.facePalmsaction(this.props.postId)\r\n                  }\r\n                  postId={this.props.postId}\r\n                />\r\n                {/* </Col>\r\n                </Row> */}\r\n              </Card.Body>\r\n            </Col>\r\n            <Col>\r\n              {this.props.radioVal ? (\r\n                <Image\r\n                  fluid\r\n                  className=\"mx-auto\"\r\n                  src={this.props.img}\r\n                  alt={this.props.alt}\r\n                />\r\n              ) : (\r\n                <div className=\"video-section\">\r\n                  <iframe\r\n                    width=\"853\"\r\n                    height=\"480\"\r\n                    src={this.createVideoURL(this.props.videoURL)}\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                    title=\"Embedded youtube\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scard;\r\n","import React from \"react\";\r\nimport Scard from \"./Scard\";\r\n\r\nclass View extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  buildPosts() {\r\n    return this.props.posts.map((current, i, a) => {\r\n      return (\r\n        <Scard\r\n          key={i}\r\n          postId={current.postId}\r\n          id={current.userName}\r\n          img={current.img}\r\n          videoURL={current.videoURL}\r\n          userPhoto={current.userPhoto}\r\n          radioVal={current.radioVal}\r\n          text={current.text}\r\n          likes={current.likes}\r\n          likeaction={(i) => this.props.likeaction(i)}\r\n          fails={current.fails}\r\n          failsaction={(i) => this.props.failsaction(i)}\r\n          facePalms={current.facePalms}\r\n          facePalmsaction={(i) => this.props.facePalmsaction(i)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>{this.buildPosts()}</div>\r\n        <div id=\"att\">\r\n          Icons made by{\" \"}\r\n          <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\r\n            Freepik\r\n          </a>{\" \"}\r\n          from{\" \"}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            {\" \"}\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst radios = [\r\n  { name: \"Add Image\", value: \"1\", checked: true },\r\n  { name: \"Add Video\", value: \"2\", checked: false },\r\n];\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: \"Choose User\",\r\n      userPhoto: \"\",\r\n      userName: \"\",\r\n      text: \"\",\r\n      img: \"\",\r\n      videoURL: \"\",\r\n      checked: false,\r\n      radioVal: true,\r\n    };\r\n    toastr.options = {\r\n      closeButton: true,\r\n      debug: false,\r\n      extendedTimeOut: \"1000\",\r\n      hideDuration: \"1000\",\r\n      hideEasing: \"linear\",\r\n      hideMethod: \"fadeOut\",\r\n      newestOnTop: false,\r\n      onclick: null,\r\n      positionClass: \"toast-top-full-width\",\r\n      preventDuplicates: true,\r\n      progressBar: true,\r\n      showDuration: \"300\",\r\n      showEasing: \"swing\",\r\n      showMethod: \"fadeIn\",\r\n      timeOut: \"5000\",\r\n    };\r\n    toastr.clear();\r\n\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({\r\n  //     postId:\r\n  //       this.props.posts.lenght > 0\r\n  //         ? this.props.posts[this.props.posts.length - 1].postId\r\n  //         : 0,\r\n  //   });\r\n  // }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const newState = {};\r\n    newState[event.target.name] = event.target.value;\r\n    this.setState(newState);\r\n  }\r\n\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    const newId = this.state.postId + 1;\r\n    this.props.onsubmit({\r\n      postId: this.props.posts.length,\r\n      userName: this.state.currentUser,\r\n      text: this.state.text,\r\n      img: this.state.img,\r\n      videoURL: this.state.videoURL,\r\n      likes: 0,\r\n      fails: 0,\r\n      facePalms: 0,\r\n      radioVal: this.state.radioVal,\r\n      userPhoto: this.state.userPhoto,\r\n    });\r\n    toastr.success(\"post added\");\r\n    this.setState({\r\n      userName: \"\",\r\n      text: \"\",\r\n      img: \"\",\r\n      videoURL: \"\",\r\n      likes: 0,\r\n      fails: 0,\r\n      facePalms: 0,\r\n      radioVal: true,\r\n      userPhoto: \"\",\r\n    });\r\n  }\r\n\r\n  findUser(filterUser) {\r\n    this.props.users.map((user) => {\r\n      if (user.userName === filterUser) {\r\n        this.setState({\r\n          userPhoto: user.userPhoto,\r\n          currentUser: user.userName,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setRadioValue(radioValPass) {\r\n    if (radioValPass === \"2\") {\r\n      this.setState({ radioVal: false });\r\n    } else {\r\n      this.setState({ radioVal: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card bg=\"light\" className=\"mx-auto mt-2\">\r\n          <Form autocomplete=\"off\" onSubmit={(e) => this.submitHandler(e)}>\r\n            <Form.Group controlId=\"userID\">\r\n              <Form.Label>User</Form.Label>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.state.currentUser || \"Choose User\"}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu\r\n                  onClick={(e) => this.findUser(e.target.innerHTML)}\r\n                >\r\n                  {this.props.users.map((user) => {\r\n                    return (\r\n                      <Dropdown.Item key={user.userId}>\r\n                        {user.userName}\r\n                      </Dropdown.Item>\r\n                    );\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"text\">\r\n              <Form.Label>Text</Form.Label>\r\n              <Form.Control\r\n                name=\"text\"\r\n                type=\"text\"\r\n                value={this.state.text}\r\n                placeholder=\"text\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <ButtonGroup className=\"mb-2\">\r\n              {radios.map((radio, idx) => (\r\n                <ToggleButton\r\n                  key={idx}\r\n                  id={`radio-${idx}`}\r\n                  type=\"radio\"\r\n                  variant=\"secondary\"\r\n                  name=\"radio\"\r\n                  value={radio.value}\r\n                  checked={\r\n                    idx === 0 ? this.state.radioVal : !this.state.radioVal\r\n                  }\r\n                  onChange={(e) => this.setRadioValue(e.currentTarget.value)}\r\n                >\r\n                  {radio.name}\r\n                </ToggleButton>\r\n              ))}\r\n            </ButtonGroup>\r\n            {this.state.radioVal ? (\r\n              <Form.Group controlId=\"img\">\r\n                <Form.Label>Image Address</Form.Label>\r\n                <Form.Control\r\n                  name=\"img\"\r\n                  type=\"text\"\r\n                  value={this.state.img}\r\n                  placeholder=\"insert url for image\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Group>\r\n            ) : (\r\n              <Form.Group controlId=\"video\">\r\n                <Form.Label>Video Address</Form.Label>\r\n                <Form.Control\r\n                  name=\"videoURL\"\r\n                  type=\"text\"\r\n                  value={this.state.videoURL}\r\n                  placeholder=\"insert url for video\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add Post\r\n            </Button>\r\n          </Form>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Add;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: 0,\r\n      userName: \"\",\r\n      userPhoto: \"\",\r\n    };\r\n    toastr.options = {\r\n      closeButton: true,\r\n      debug: false,\r\n      extendedTimeOut: \"1000\",\r\n      hideDuration: \"1000\",\r\n      hideEasing: \"linear\",\r\n      hideMethod: \"fadeOut\",\r\n      newestOnTop: false,\r\n      onclick: null,\r\n      positionClass: \"toast-top-full-width\",\r\n      preventDuplicates: true,\r\n      progressBar: true,\r\n      showDuration: \"300\",\r\n      showEasing: \"swing\",\r\n      showMethod: \"fadeIn\",\r\n      timeOut: \"5000\",\r\n    };\r\n    toastr.clear();\r\n  }\r\n\r\n  componentDidMountUser() {\r\n    this.setState({\r\n      userId: this.users.lastid,\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const newState = {};\r\n    newState[event.target.name] = event.target.value;\r\n    this.setState(newState);\r\n  }\r\n\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    const newId = this.state.userId + 1;\r\n    this.props.onsubmit(newId, this.state.userName, this.state.userPhoto);\r\n    toastr.success(\"post added\");\r\n    this.setState({\r\n      userId: newId,\r\n      userName: \"\",\r\n      userPhoto: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card bg=\"light\" className=\"mx-auto mt-2\">\r\n          <Form autocomplete=\"off\" onSubmit={(e) => this.submitHandler(e)}>\r\n            <Form.Group controlId=\"userName\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control\r\n                name=\"userName\"\r\n                type=\"text\"\r\n                value={this.state.userName}\r\n                placeholder=\"User Name\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"userPhoto\">\r\n              <Form.Label>Profile Photo</Form.Label>\r\n              <Form.Control\r\n                name=\"userPhoto\"\r\n                type=\"text\"\r\n                value={this.state.userPhoto}\r\n                placeholder=\"insert url for image\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add User\r\n            </Button>\r\n          </Form>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./App.css\";\r\nimport View from \"./View\";\r\nimport Add from \"./Add\";\r\nimport Profile from \"./Profile\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      userId: undefined,\r\n      posts: [],\r\n      postId: undefined,\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   // localStorage.removeItem(\"posts\")\r\n  //   const listContents = localStorage.getItem(\"posts\");\r\n  //   let postValue = 0;\r\n  //   if (listContents) {\r\n  //     postValue =\r\n  //       JSON.parse(listContents)[JSON.parse(listContents).length - 1].postid;\r\n  //   }\r\n\r\n  //   this.setState({ posts: JSON.parse(listContents) || [], postId: postValue });\r\n  // }\r\n\r\n  // componentDidMountUser() {\r\n  //   const userContents = localStorage.getItem(\"users\");\r\n  //   let userValue = 0;\r\n  //   if (userContents) {\r\n  //     userValue =\r\n  //       JSON.parse(userContents)[JSON.parse(userContents).length - 1].userid;\r\n  //   }\r\n\r\n  //   this.setState({ user: JSON.parse(userContents) || [], userId: userValue });\r\n  // }\r\n\r\n  updateUserItems(userId, userName, userPhoto) {\r\n    const userItem = { userId, userName, userPhoto };\r\n    this.setState(\r\n      (state) => ({\r\n        users: state.users.concat(userItem),\r\n      }),\r\n      () => localStorage.setItem(\"user\", JSON.stringify(this.state.users))\r\n    );\r\n  }\r\n\r\n  updateListItems(postItem) {\r\n    this.setState(\r\n      (state) => ({\r\n        posts: state.posts.concat(postItem),\r\n      }),\r\n      () => localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\r\n    );\r\n  }\r\n\r\n  addLike(id) {\r\n    this.setState(\r\n      (state) => ({\r\n        posts: state.posts.map((post) =>\r\n          post.postId === id ? { ...post, likes: post.likes + 1 } : post\r\n        ),\r\n      }),\r\n      () => localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\r\n    );\r\n  }\r\n\r\n  addFails(id) {\r\n    this.setState(\r\n      (state) => ({\r\n        posts: state.posts.map((post) =>\r\n          post.postId === id ? { ...post, fails: post.fails + 1 } : post\r\n        ),\r\n      }),\r\n      () => localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\r\n    );\r\n  }\r\n\r\n  addFacePalms(id) {\r\n    this.setState(\r\n      (state) => ({\r\n        posts: state.posts.map((post) =>\r\n          post.postId === id ? { ...post, facePalms: post.facePalms + 1 } : post\r\n        ),\r\n      }),\r\n      () => localStorage.setItem(\"posts\", JSON.stringify(this.state.posts))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar bg=\"primary\" expand=\"md\">\r\n          <Navbar.Brand>FacePalm™</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Link className=\"nav-link\" to=\"/Profile\">\r\n                Profile\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                View\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/add\">\r\n                Add\r\n              </Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Container>\r\n          <div className=\"page\">\r\n            <Switch>\r\n              <Route path=\"/add\">\r\n                <Add\r\n                  posts={this.state.posts}\r\n                  users={this.state.users}\r\n                  onsubmit={(\r\n                    postid,\r\n                    id,\r\n                    text,\r\n                    img,\r\n                    videoURL,\r\n                    likes,\r\n                    fails,\r\n                    facePalms\r\n                  ) =>\r\n                    this.updateListItems(\r\n                      postid,\r\n                      id,\r\n                      text,\r\n                      img,\r\n                      videoURL,\r\n                      likes,\r\n                      fails,\r\n                      facePalms\r\n                    )\r\n                  }\r\n                  lastid={this.state.postId}\r\n                />\r\n              </Route>\r\n              <Route path=\"/Profile\">\r\n                <Profile\r\n                  onsubmit={(userId, userName, userPhoto) =>\r\n                    this.updateUserItems(userId, userName, userPhoto)\r\n                  }\r\n                  lastid={this.state.userId}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <View\r\n                  users={this.state.users}\r\n                  posts={this.state.posts}\r\n                  likeaction={(id) => this.addLike(id)}\r\n                  failsaction={(id) => this.addFails(id)}\r\n                  facePalmsaction={(id) => this.addFacePalms(id)}\r\n                />\r\n              </Route>\r\n              <Route path=\"/\">Error: 404 not found</Route>\r\n            </Switch>\r\n          </div>\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}